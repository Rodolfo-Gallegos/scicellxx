#+STARTUP: showall
#+TITLE: Installing Armadillo
#+AUTHOR: Julio C.

This guide is to allow [[https://github.com/tachidok/chapchom][chapchom]] to work with =Armadillo 8.300.3= in
=Ubuntu 16.04 LTS 64 bits=. If you find any problem or something in
this guide makes no sense please contact the author.

Please also refer to the [[http://arma.sourceforge.net/][original documentation]] in case you are having
troubles with the installation.

* Requirements
Before installing this version of Armadillo please check that you have
not any other version of Armadillo already installed in your
system. If that is the case then proceed to uninstall it.

Once you ensure that Armadillo is not already installed in your system
then proceed to check that you have the following packages installed
in your system.
- cmake (tested with =cmake 3.5.1-1ubuntu3=)

The following set of packages are optional, however we highly
recommend you to install them to improve performance.

+ +libopenblas-dev+
+ libblas-dev (tested with =libblas-common=, =libblas-dev 3.6.0-2ubuntu2=)
+ liblapack-dev (tested with =liblapack-dev 3.6.0-2ubuntu2=)
+ libarpack-dev (tested with =libarpack2=, =libarpack2-dev 3.3.0-1build2=)
+ SuperLU (tested with =SuperLU_5.2.0=). For this one check [[file:installing_superlu.html][the
  installation instructions]] in the doc folder.

According to Armadillo's documentation, LAPACK and BLAS are used to
work with dense matrices, meanwhile ARPACK and SuperLU are used to
work with sparese matrices. If you want to use SuperLU then you need
to stick to version 5.2 (check README.txt:146 of Armadillo
documentation). If you want to use OpenMP then make sure you are using
version 3.1 or newer (check README.txt:372 of Armadillo
documentation).

* Installation

- Extract the compressed file
  =/external_src/armadillo/armadillo-8.300.3.tar.xz= in a folder of
  your preference. We recommend you to extract it out of the chapchom
  project folder to avoid adding the files to the git repository. If
  you do extract it inside the chapchom project folder please extreme
  precautions when adding your files to the git repository.

- Go to the folder where you extracted the files and type

#+BEGIN_SRC bash
mkdir lib
cmake . \
-DCMAKE_INSTALL_PREFIX=lib \
-DSuperLU_INCLUDE_DIR=path_to_SuperLU_include_directory \
-DSuperLU_LIBRARY=path_to_SuperLU_library \
-Dopenblas_LIBRARY=path_to_openBLAS_library
#+END_SRC

NOTE: If you now to use cmake-gui then you can configure the above
variables there as well.

#+BEGIN_SRC bash
make
make install
#+END_SRC

In some previous installations we used

#+BEGIN_SRC bash
make install DESTDIR=my_installation_directory
#+END_SRC

but it seems with just =make install= is enough.

- Add library path to =LD_LIBRARY_PATH= environment variable. In a
  terminal type

#+BEGIN_SRC bash
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/path/to/armadillo/installation/lib/folder
#+END_SRC

NOTE: You may (or not) need to add this path everytime you restart
your computer.

- Finally just type

#+BEGIN_SRC bash
echo $LD_LIBRARY_PATH
#+END_SRC

and check that the path you added in shown.

* Compile and run the example

- Go to the =examples= folder and open the =Makefile=
- If you specified an installation folder then you will need to add
  the =include= and =lib= folder in the =Makefile=.
- Add the following lines in the =Makefile=

#+BEGIN_SRC bash
INCLUDE=-I /path/to/armadillo/include/folder
LIBS=-L /path/to/armadillo/lib/folder
#+END_SRC

and modify the line

#+BEGIN_SRC bash
CXXFLAGS = $(DEBUG) $(FINAL) $(OPT) $(EXTRA_OPT)
#+END_SRC

by

#+BEGIN_SRC bash
CXXFLAGS = $(DEBUG) $(FINAL) $(OPT) $(EXTRA_OPT) $(INCLUDE) $(LIBS)
#+END_SRC

- Compile the example1

#+BEGIN_SRC bash
make example1
#+END_SRC

- If you have problems with pthread issues then add the pthread
  library into the =LIB_FLAGS=

#+BEGIN_SRC bash
  LIB_FLAGS = -larmadillo -lpthread
#+END_SRC

- If everything goes right then you should have an executable file
  called example1, run it by typing

#+BEGIN_SRC bash
./example1
#+END_SRC

- If you have problems as no shared library found then make sure you
  added the correct path for the armadillo libraries (/.so/) in the
  environment variable =LD_LIBRARY_PATH=.

* Further configuration

- If you require an specific configuration for Armadillo as OpenMP
  support, acceleration, disabling of BLAS, LAPACK or something even
  more weird please do check [[http://arma.sourceforge.net/docs.html#example_prog][the official documentation]].



