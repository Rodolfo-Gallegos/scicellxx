#+STARTUP: showall
#+TITLE: Julio's Kanban board for SciCell++
#+AUTHOR: Julio César Pérez Sansalvador

* Backlog
** Review the use of docker containers in GitHub actions
 * The current workflow in GitHub actions is taking too much time, it
   is currently commented/disabled in the workflow file for GitHub
** Demo for Poisson Equation (using MeshFree Methods)
** Integrate Triangle for Mesh Generation
** Delete templates from matrices and linear solvers
 * There is really no need for templates since we have a typedef to
   define whether use float or doubles
** Move cellular automata code to SciCell++
 1. [ ] Create new branch for moving
 2. [ ] Move the src code
 3. [ ] Move the demos
 4. [ ] Demo driver for pedestrian evacuation
** Demo of the Model to Predict COVID-19 Epidemics with Applications to South Korea, Italy, and Spain
 * Here is the link
https://sinews.siam.org/Details-Page/a-model-to-predict-covid-19-epidemics-with-applications-to-south-korea-italy-and-spain
* Ready to start
** Re-install docs folder with sphinx
 * How to git with SciCell++
 * Update README.md file
* Working on
* Reviewing
* Done
** Add tools for code-coverage for branches
 * [x] Check information on codecov.io
 * There is no need to update coverage reports per branch, therefore
   the option for updating reports in the tools/run_codecov.sh has
   been commented.
** Use docker image from scicellxx to build/run test
+ Check documentation from GitHub to implement workflow
+ Add workflow for docker image into workflow
** Change chapchom name in files for scicellxx
+ Use emacs with dired for help
** Need to modify the strategy for memory allocation of matrices and vectors
- [DONE] IF WE DO ALL THE FOLLOWING THE WE WILL NOT REQUIRE TO EXPLICITLY
  CALL FOR THE MEMORY ALLOCATION METHOD WHEN WORKING WITH MATRICES AND VECTORS
- [DONE] Memory allocation is performed if a matrix or vector is created with
  a given size, otherwise, no memory allocation should be performed

- [DONE] Delete the method "allocate_memory()" without arguments to check how
  many parts of the code are affected.

- [DONE] The methods that work with matrices and vectors should initially
  check whether the matrices or vectors have memory allocated, if that
  is the case then check the dimensions, otherwise then create the
  matrices and vectors with the corresponding dimensions.
- [DONE] We should not require to create a matrix or vector with the
  corresponding sizes for operation in order to be able to perform the
  operations, the user SHOULD NOT BE RESPONSIBLE for the sizes of the
  resulting matrices.
- [DONE] Check the flag of memory allocation when creating a matrix with an
  initial size, it should be set to memory allocated since the matrix
  has been given a size therefore memory should have been allocated.
- [DONE] Check how the method for matrices concatenation (armadillo) are
  working in order to know how to do this!!!
** DEMOS [distance matrix] from Mesh Free Approximation Methods with MatLab book
*** Problem of chapter 1
 * 1D
  - Left to review the position of nodes given by an /h/ value, such
    that the distance between nodes is /h/.
  - Then continue with a random generation of nodes' positions
 * 2D
  - Create methods to generate nodes positions
  - Distance between nodes given by an /h/ parameter
  - Random nodes position

*** Problem of chapter 2
 * Implement the same stuff as above

*** Problem of chapter 6
 * Implement the same stuff as above

** Create factory for matrices and vector
 * After deleting innecessary templates it seems necessary to create a
   matrices and vectors generator based on whether armadillo library
   is used or not

** Linear solver factory

