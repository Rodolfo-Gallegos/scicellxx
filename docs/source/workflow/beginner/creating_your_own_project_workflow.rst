Creating your own project
=========================

The easiest way to start a new project is to use a demo as a
template. For this example we are going to copy the demo driver
``demo_basic_interpolation.cpp`` from the folder
``demos/interpolation/basic_interpolation``.

1. Open a terminal and go to your private folder.

2. Type the following to copy the demo driver into your private folder:

   .. code-block:: shell

      cp ../../demos/interpolation/basic_interpolation/demo_basic_interpolation.cpp demo_john.cpp

3. Copy the ``CMakeLists.txt.private_template`` file from the
``tools`` folder into your private directory and change its name to
``CMakeLists.txt``

   .. code-block:: shell

      cp ../../tools/CMakeLists.txt.private_template CMakeLists.txt

4. Change the content of the ``CMakeLists.txt`` file as follow:

  * Change all the instances of the tag ``SRC_demo_john`` for your own
    tag to identify your source code. For example: ``SRC_project_sophy``.

  * Change all the instances of ``demo_john.cpp`` for the name of your
    source code file. For example: ``project_sophy.cpp``.

  * Change all the instances of ``demo_john``, this will be the name
    of your executable and the name you need to type at the terminal
    to compile your project. For example:``project_sophy``.
    
  * Change all the instances of the tag ``LIB_demo_john`` for your own
    tag to identify libraries required for your code. For example:
    ``LIB_project_sophy``.

  * Include the modules you need. In the template we only include the
    ``general_lib`` and the ``problem_lib`` modules. Check the
    :doc:`modules` document for the full list of module and their
    details.

5. Go to the root folder of SciCell++ and execute the ``./autogen.sh``
   script. If you find errors please make sure you correctly changed
   all the tags indicated in the previous step. Once building has
   finished without errors you can build your own project.

**Building and executing your project**

Open a terminal and follow these instructions:

1. Go to the ``build`` folder in the root SciCell++ folder and type

   .. code-block:: shell
   
      make demo_sophy
      
   The building output should be displayed at your screen. Once no
   errors have been reported you may run your code.

2. Go to your ``private`` folder, create a ``RESLT`` folder if you
   have no one, and type:

   .. code-block:: shell

      ./bin/demo_sophy
                   
3. You should see the output of your project at the terminal.

.. important:: As you noticed, the generation and execution of your
               project is performed in two different folders:

               * the ``build`` folder (building)
               * your ``private`` folder (execution)

               We use this two-folders strategy to avoid cluttering
               the folder structure of SciCell++ with files
               automatically generated by CMake. By following this
               strategy we keep a clean folder structure for SciCell++
               and group all files generated by CMake in the ``build``
               folder. This help us to keep track for changes easily
               since we can exclude the whole ``build`` folder from
               the git repository.

               **Just keep in mind the following:**

               * Whenever you want to build your project you need to do so in the ``build`` folder, inthere just type ``make`` followed by the name of your project.

               * Whenever you want to execute your project go to your
                 ``private`` folder and type
                 ``./bin/the-name-of-your-project``.
                 
